{"version":3,"sources":["components/Nav.js","components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","setLibraryStatus","libraryStatus","onClick","icon","faMusic","Player","audioRef","currentSong","isPlaying","setIsPlaying","songInfo","setSongInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","getTime","time","Math","floor","slice","trackAnim","transform","animationPercentage","className","duration","currentTime","style","background","color","type","min","max","value","onChange","e","target","size","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","songSelectedHandler","Library","chillHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundCurrent","round","roundDuration","console","log","songEndedHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAgBeA,EAZH,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,iBAAkBC,EAAmB,EAAnBA,cAC5B,OACI,gCACI,uCACA,yBAAQC,QAAW,WAAOF,GAAkBC,IAA5C,oBAEI,cAAC,IAAD,CAAiBE,KAAQC,aCwG1BC,EA9GA,SAAC,GAUT,IATHC,EASE,EATFA,SACAC,EAQE,EARFA,YACAC,EAOE,EAPFA,UACAC,EAME,EANFA,aACAC,EAKE,EALFA,SACAC,EAIE,EAJFA,YACAC,EAGE,EAHFA,MACAC,EAEE,EAFFA,eACAC,EACE,EADFA,SAGMC,EAAuB,SAACC,GAC1B,IAAMC,EAAWL,EAAMM,KAAI,SAACC,GACxB,OAAGA,EAAKC,KAAOJ,EAASI,GACpB,2BACOD,GADP,IAEIE,QAAQ,IAGZ,2BACOF,GADP,IAEIE,QAAQ,OAIpBP,EAASG,IAWPK,EAAgB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACjBC,EAAeb,EAAMc,WAAU,SAACP,GAAD,OAAWA,EAAKC,KAAOb,EAAYa,MAErD,iBAAdG,EAHkB,gCAIZV,EAAeD,GAAOa,EAAe,GAAKb,EAAMe,SAJpC,OAKlBZ,EAAqBH,GAAOa,EAAe,GAAKb,EAAMe,SALpC,UAOJ,cAAdJ,EAPkB,oBAQG,IAAjBE,EARc,iCASRZ,EAAeD,EAAMA,EAAMe,OAAO,IAT1B,cAUfZ,EAAqBH,EAAMA,EAAMe,OAAO,IACrCnB,GAAWF,EAASsB,QAAQC,OAXhB,4CAcZhB,EAAeD,GAAOa,EAAe,GAAKb,EAAMe,SAdpC,QAelBZ,EAAqBH,GAAOa,EAAe,GAAKb,EAAMe,SAfpC,QAiBlBnB,GAAWF,EAASsB,QAAQC,OAjBV,4CAAH,sDAoBhBC,EAAU,SAACC,GACb,OACIC,KAAKC,MAAMF,EAAO,IAAM,KAAO,IAAMC,KAAKC,MAAMF,EAAO,KAAKG,OAAO,IAOrEC,EAAY,CACdC,UAAU,cAAD,OAAgB1B,EAAS2B,oBAAzB,OAEb,OACI,sBAAKC,UAAY,SAAjB,UACK,sBAAKA,UAAY,eAAjB,UACG,4BAAI5B,EAAS6B,SAAUT,EAAQpB,EAAS8B,aAAe,SACvD,sBAAKC,MAAS,CAACC,WAAW,6BAAD,OAA+BnC,EAAYoC,MAAM,GAAjD,aAAwDpC,EAAYoC,MAAM,GAA1E,MAAkFL,UAAY,QAAvH,UACI,uBACIM,KAAO,QACPC,IAAO,EACPC,IAAOpC,EAAS6B,UAAY,EAC5BQ,MAASrC,EAAS8B,YAClBQ,SAjBA,SAACC,GACjB3C,EAASsB,QAAQY,YAAcS,EAAEC,OAAOH,MACxCpC,EAAY,2BAAID,GAAL,IAAe8B,YAAaS,EAAEC,OAAOH,YAiBpC,qBAAKN,MAASN,EAAWG,UAAY,qBAEzC,4BAAIR,EAAQpB,EAAS6B,eAEzB,sBAAKD,UAAY,eAAjB,UACI,cAAC,IAAD,CACIA,UAAY,YACZpC,QAAW,WAAOoB,EAAiB,cACnC6B,KAAO,KACPhD,KAAQiD,MAEZ,cAAC,IAAD,CACIlD,QAjEQ,WACjBM,GACCF,EAASsB,QAAQyB,QACjB5C,GAAcD,KAEdF,EAASsB,QAAQC,OACjBpB,GAAcD,KA4DN8B,UAAY,OACZa,KAAO,KACPhD,KAAQK,EAAY8C,IAAUC,MAElC,cAAC,IAAD,CACIjB,UAAY,eACZpC,QAAW,WAAOoB,EAAiB,iBACnC6B,KAAO,KACPhD,KAAQqD,aC9FbC,EAVF,SAAC,GAAmB,IAAlBlD,EAAiB,EAAjBA,YACX,OACI,sBAAK+B,UAAY,iBAAjB,UACI,qBAAKoB,IAAOnD,EAAYoD,KAAMC,IAAOrD,EAAYsD,QACjD,6BAAKtD,EAAYoD,OACjB,6BAAKpD,EAAYuD,aCmCdC,EAxCK,SAAC,GAQd,IAPH5C,EAOE,EAPFA,KACAN,EAME,EANFA,eACAD,EAKE,EALFA,MACAQ,EAIE,EAJFA,GACAd,EAGE,EAHFA,SACAE,EAEE,EAFFA,UACAM,EACE,EADFA,SAGMkD,EAAmB,uCAAG,4BAAAxC,EAAA,6DACxBX,EAAeM,GAETF,EAAWL,EAAMM,KAAI,SAACC,GACxB,OAAGA,EAAKC,KAAOA,EACX,2BACOD,GADP,IAEIE,QAAQ,IAGZ,2BACOF,GADP,IAEIE,QAAQ,OAZI,SAgBlBP,EAASG,GAhBS,OAiBrBT,GAAWF,EAASsB,QAAQC,OAjBP,2CAAH,qDAmBzB,OACI,sBAAK3B,QAAW8D,EAAqB1B,UAAS,uBAAoBnB,EAAKE,OAAQ,WAAa,IAA5F,UACI,qBAAKuC,IAAOzC,EAAK0C,MAAOH,IAAOvC,EAAKwC,OACpC,sBAAKrB,UAAY,mBAAjB,UACI,6BAAKnB,EAAKwC,OACV,6BAAKxC,EAAK2C,gBCFXG,EA/BC,SAAC,GAOV,IANHrD,EAME,EANFA,MACAC,EAKE,EALFA,eACAP,EAIE,EAJFA,SACAE,EAGE,EAHFA,UACAM,EAEE,EAFFA,SACAb,EACE,EADFA,cAGA,OACI,sBAAKqC,UAAS,kBAAerC,EAAe,iBAAkB,GAAhD,KAAd,UACA,yCACA,qBAAKqC,UAAY,gBAAjB,SACK1B,EAAMM,KAAI,SAAAC,GAAI,OACf,cAAC,EAAD,CACIb,SAAYA,EACZM,MAASA,EACTC,eAAkBA,EAClBM,KAAQA,EACRL,SAAYA,EACZM,GAAMD,EAAKC,GAEXZ,UAAaA,GADNW,EAAKC,a,QCuDb8C,MA7Ef,WACI,MAAM,CACF,CACIP,KAAM,cACNE,MAAO,uGACPC,OAAQ,cACRK,MAAO,gDACPxB,MAAO,CAAC,UAAW,WACnBvB,GAAIgD,cACJ/C,QAAQ,GAEZ,CACIsC,KAAM,cACNE,MAAO,mEACPC,OAAQ,WACRK,MAAO,+CACPxB,MAAO,CAAC,UAAW,WACnBvB,GAAIgD,cACJ/C,QAAQ,GAEZ,CACIsC,KAAM,4BACNE,MAAO,mEACPC,OAAQ,aACRK,MAAO,+CACPxB,MAAO,CAAC,UAAW,WACnBvB,GAAIgD,cACJ/C,QAAQ,GAEZ,CACIsC,KAAM,UACNE,MAAO,uGACPC,OAAQ,0BACRK,MAAO,+CACPxB,MAAO,CAAC,UAAW,WACnBvB,GAAIgD,cACJ/C,QAAQ,GAEZ,CACIsC,KAAM,iBACNE,MAAO,uGACPC,OAAQ,SACRK,MAAO,gDACPxB,MAAO,CAAC,UAAW,WACnBvB,GAAIgD,cACJ/C,QAAQ,GAEZ,CACIsC,KAAM,gBACNE,MAAO,mEACPC,OAAQ,OACRK,MAAO,+CACPxB,MAAO,CAAC,UAAW,WACnBvB,GAAIgD,cACJ/C,QAAQ,GAEZ,CACIsC,KAAM,eACNE,MAAO,uGACPC,OAAQ,SACRK,MAAO,gDACPxB,MAAO,CAAC,UAAW,WACnBvB,GAAIgD,cACJ/C,QAAQ,GAEZ,CACIsC,KAAM,eACNE,MAAO,uGACPC,OAAQ,sBACRK,MAAO,+CACPxB,MAAO,CAAC,UAAW,WACnBvB,GAAIgD,cACJ/C,QAAQ,KCRLgD,MAzDf,WACE,IAAM/D,EAAWgE,iBAAO,MADX,EAGaC,mBAASC,KAHtB,mBAGN5D,EAHM,KAGCE,EAHD,OAIyByD,mBAAS3D,EAAM,IAJxC,mBAINL,EAJM,KAIOM,EAJP,OAKqB0D,oBAAS,GAL9B,mBAKN/D,EALM,KAKKC,EALL,OAMmB8D,mBAAS,CAAC/B,YAAa,EAAGD,SAAU,EAAGF,oBAAqB,IAN/E,mBAMN3B,EANM,KAMIC,EANJ,OAO6B4D,oBAAS,GAPtC,mBAONtE,EAPM,KAOSD,EAPT,KASPyE,EAAoB,SAACxB,GACzB,IAAMrB,EAAUqB,EAAEC,OAAOV,YACnBD,EAAWU,EAAEC,OAAOX,SACpBmC,EAAe1C,KAAK2C,MAAM/C,GAC1BgD,EAAgB5C,KAAK2C,MAAMpC,GAC3BF,EAAsBL,KAAK2C,MAAOD,EAAeE,EAAiB,KACxEC,QAAQC,IAAIzC,GACZ1B,EAAY,2BAAID,GAAL,IAAe8B,YAAaZ,EAASW,SAAUA,EAAUF,0BAEhE0C,EAAgB,uCAAG,4BAAAvD,EAAA,6DACnBC,EAAeb,EAAMc,WAAU,SAACP,GAAD,OAAWA,EAAKC,KAAOb,EAAYa,MAD/C,SAEjBP,EAAeD,GAAOa,EAAe,GAAKb,EAAMe,SAF/B,OAGpBnB,GAAWF,EAASsB,QAAQC,OAHR,2CAAH,qDAKtB,OACE,sBAAKS,UAAS,cAASrC,EAAe,iBAAmB,IAAzD,UACE,cAAC,EAAD,CAAKD,iBAAoBA,EAAkBC,cAAiBA,IAC5D,cAAC,EAAD,CAAMM,YAAeA,IACrB,cAAC,EAAD,CACED,SAAYA,EACZE,UAAaA,EACbC,aAAgBA,EAChBF,YAAeA,EACfI,YAAeA,EACfD,SAAYA,EACZE,MAASA,EACTE,SAAYA,EACZD,eAAkBA,IAEpB,cAAC,EAAD,CACEZ,cAAiBA,EACjBK,SAAYA,EACZE,UAAaA,EACbK,eAAkBA,EAClBD,MAASA,EACTE,SAAYA,IAEd,uBACUkE,aAAgBP,EAChBQ,iBAAoBR,EACpBS,IAAO5E,EACPsD,IAAOrD,EAAY4D,MACnBgB,QAAWJ,QChDZK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6625af84.chunk.js","sourcesContent":["import React from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faMusic} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nav = ({setLibraryStatus, libraryStatus}) => {\r\n    return(\r\n        <nav>\r\n            <h1>Waves</h1>\r\n            <button onClick = {() => {setLibraryStatus(!libraryStatus)}} >\r\n                Library\r\n                <FontAwesomeIcon icon = {faMusic}/>\r\n            </button>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faPlay, faAngleLeft, faAngleRight, faPause} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Player = ({\r\n    audioRef, \r\n    currentSong, \r\n    isPlaying, \r\n    setIsPlaying, \r\n    songInfo, \r\n    setSongInfo, \r\n    songs, \r\n    setCurrentSong,\r\n    setSongs\r\n}) => {\r\n\r\n    const activeLibraryHandler = (nextPrev) => {\r\n        const newSongs = songs.map((song) => {\r\n            if(song.id === nextPrev.id){\r\n                return{\r\n                    ...song,\r\n                    active: true\r\n                }\r\n            }else{\r\n                return{\r\n                    ...song,\r\n                    active: false\r\n                }\r\n            }\r\n        })\r\n        setSongs(newSongs)\r\n    }\r\n    const playSongHandler = () => {\r\n        if(isPlaying){\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        }else{\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }        \r\n    }\r\n    const skipTrackHandler = async (direction) => {\r\n        let currentIndex = songs.findIndex((song) => (song.id === currentSong.id))\r\n\r\n        if(direction === 'skip-forward'){\r\n           await setCurrentSong(songs[(currentIndex + 1) % songs.length])\r\n           activeLibraryHandler(songs[(currentIndex + 1) % songs.length])\r\n        }\r\n        if(direction === 'skip-back'){\r\n            if(currentIndex === 0){\r\n              await  setCurrentSong(songs[songs.length-1])\r\n              activeLibraryHandler(songs[songs.length-1])\r\n              if(isPlaying) audioRef.current.play();\r\n                return                \r\n            }\r\n           await setCurrentSong(songs[(currentIndex - 1) % songs.length])\r\n           activeLibraryHandler(songs[(currentIndex - 1) % songs.length])\r\n        }\r\n        if(isPlaying) audioRef.current.play();\r\n    }\r\n    \r\n    const getTime = (time) => {\r\n        return(\r\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        )\r\n    }\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value\r\n        setSongInfo({...songInfo, currentTime: e.target.value})\r\n    }\r\n    const trackAnim = {\r\n        transform: `translateX(${songInfo.animationPercentage}%)`\r\n    }\r\n    return(\r\n        <div className = \"player\">\r\n             <div className = \"time-control\">\r\n                <p>{songInfo.duration? getTime(songInfo.currentTime) : \"0:00\"}</p>\r\n                <div style = {{background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`}} className = \"track\">\r\n                    <input \r\n                        type = \"range\" \r\n                        min = {0}\r\n                        max = {songInfo.duration || 0}\r\n                        value = {songInfo.currentTime} \r\n                        onChange = {dragHandler}\r\n                    />\r\n                    <div style = {trackAnim} className = \"animate-track\"></div>\r\n                </div>\r\n                <p>{getTime(songInfo.duration)}</p>\r\n             </div>\r\n            <div className = \"play-control\">\r\n                <FontAwesomeIcon \r\n                    className = \"skip-back\" \r\n                    onClick = {() => {skipTrackHandler('skip-back')}}\r\n                    size = \"2x\"  \r\n                    icon = {faAngleLeft} \r\n                />\r\n                <FontAwesomeIcon \r\n                    onClick = {playSongHandler} \r\n                    className = \"play\" \r\n                    size = \"2x\"  \r\n                    icon = {isPlaying ? faPause : faPlay} \r\n                />\r\n                <FontAwesomeIcon \r\n                    className = \"skip-forward\"\r\n                    onClick = {() => {skipTrackHandler('skip-forward')}} \r\n                    size = \"2x\"  \r\n                    icon = {faAngleRight} \r\n                />\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\n\r\nconst Song = ({currentSong}) => {\r\n    return(\r\n        <div className = \"song-container\">\r\n            <img alt = {currentSong.name} src = {currentSong.cover}/>\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default Song;\r\n\r\n","import React from 'react';\r\n\r\nconst LibrarySong = ({\r\n    song, \r\n    setCurrentSong, \r\n    songs, \r\n    id, \r\n    audioRef, \r\n    isPlaying, \r\n    setSongs\r\n}) => {\r\n    \r\n    const songSelectedHandler = async() => {\r\n        setCurrentSong(song)        \r\n\r\n        const newSongs = songs.map((song) => {\r\n            if(song.id === id){\r\n                return{\r\n                    ...song,\r\n                    active: true\r\n                }\r\n            }else{\r\n                return{\r\n                    ...song,\r\n                    active: false\r\n                }\r\n            }\r\n        })\r\n        await setSongs(newSongs)\r\n        if(isPlaying) audioRef.current.play();   \r\n    }\r\n    return(\r\n        <div onClick = {songSelectedHandler} className = {`library-song ${song.active? \"selected\" : \"\"}`}>\r\n            <img src = {song.cover} alt = {song.name}/> \r\n            <div className = \"song-description\">           \r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default LibrarySong;\r\n","import React from 'react';\r\nimport LibrarySong from './LibrarySong';\r\n\r\nconst Library = ({\r\n    songs, \r\n    setCurrentSong, \r\n    audioRef, \r\n    isPlaying, \r\n    setSongs, \r\n    libraryStatus\r\n}) => {\r\n\r\n    return(\r\n        <div className = {`library ${libraryStatus? \"active-library\": \"\"} `}>\r\n        <h1>Library</h1>\r\n        <div className = \"library-songs\">\r\n            {songs.map(song =>  \r\n            <LibrarySong \r\n                audioRef = {audioRef}\r\n                songs = {songs} \r\n                setCurrentSong = {setCurrentSong} \r\n                song = {song}\r\n                setSongs = {setSongs}\r\n                id = {song.id}\r\n                key = {song.id}\r\n                isPlaying = {isPlaying}\r\n            />)}\r\n\r\n        </div>\r\n    </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Library","import { v4 as uuidv4} from 'uuid';\r\n\r\nfunction chillHop(){\r\n    return[\r\n        {\r\n            name: \"Bookshelves\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/c209a7df7b9bc133dfff73ce86ebc3c57c2b73dd-300x300.jpg\",\r\n            artist: \"Sleepy Fish\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10022\",\r\n            color: [\"#55737F\", \"#889E9D\"],\r\n            id: uuidv4(),\r\n            active: true\r\n        },\r\n        {\r\n            name: \"Chiaroscuro\",\r\n            cover: \"https://i.scdn.co/image/f224e10c60520c54ef64638a8b6ce44a812243d5\",\r\n            artist: \"Toonorth\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=7841\",\r\n            color: [\"#3AA36B\", \"#FA683F\"],\r\n            id: uuidv4(),\r\n            active: false\r\n        },\r\n        {\r\n            name: \"Better, Together, Forever\",\r\n            cover: \"https://i.scdn.co/image/ab67616d00001e024b24d2de142e1d4dc3a698b1\",\r\n            artist: \"Team Astro\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9253\",\r\n            color: [\"#8C7677\", \"#4E5558\"],\r\n            id: uuidv4(),\r\n            active: false\r\n        },\r\n        {\r\n            name: \"Lagoons\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/06/49f6e32ca521fbad46a1b281e3893cf6254bf11d-300x300.jpg\",\r\n            artist: \"Strehlow, Chris Mazuera\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9266\",\r\n            color: [\"#BA4A46\", \"#FDF0DD\"],\r\n            id: uuidv4(),\r\n            active: false\r\n        },\r\n        {\r\n            name: \"There and Back\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/10/0e5bb63f838ff92eeac142aae944e9f678df13c9-300x300.jpg\",\r\n            artist: \"Shopan\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10311\",\r\n            color: [\"#CEB6C6\", \"#1F487C\"],\r\n            id: uuidv4(),\r\n            active: false\r\n        },\r\n        {\r\n            name: \"Beyond Clouds\",\r\n            cover: \"https://i.scdn.co/image/ab67616d00001e024b24d2de142e1d4dc3a698b1\",\r\n            artist: \"Saib\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9297\",\r\n            color: [\"#8C7677\", \"#4E5558\"],\r\n            id: uuidv4(),\r\n            active: false\r\n        },\r\n        {\r\n            name: \"String Along\",            \r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/10/0e5bb63f838ff92eeac142aae944e9f678df13c9-300x300.jpg\",\r\n            artist: \"Miscel\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10315\",\r\n            color: [\"#CEB6C6\", \"#1F487C\"],\r\n            id: uuidv4(),\r\n            active: false\r\n        },\r\n        {\r\n            name: \"Jazz Cabbage\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/06/49f6e32ca521fbad46a1b281e3893cf6254bf11d-300x300.jpg\",\r\n            artist: \"Ian Ewing, Strehlow\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9363\",\r\n            color: [\"#FCF1D5\", \"#937084\"],\r\n            id: uuidv4(),\r\n            active: false\r\n        }\r\n    ]\r\n}\r\n\r\nexport default chillHop;","import React,  {useState, useRef} from 'react';\r\nimport './style/app.scss';\r\nimport Nav from './components/Nav';\r\nimport Player from './components/Player';\r\nimport Song from './components/Song';\r\nimport Library from './components/Library';\r\nimport data from './data';\r\n\r\n\r\nfunction App() {\r\n  const audioRef = useRef(null)\r\n  //States\r\n  const [songs, setSongs] = useState(data());\r\n  const [currentSong, setCurrentSong] = useState(songs[0]);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [songInfo, setSongInfo] = useState({currentTime: 0, duration: 0, animationPercentage: 0})\r\n  const [libraryStatus, setLibraryStatus] = useState(false)\r\n\r\n  const timeUpdateHandler = (e) => {\r\n    const current = e.target.currentTime;\r\n    const duration = e.target.duration;\r\n    const roundCurrent = Math.round(current);\r\n    const roundDuration = Math.round(duration);\r\n    const animationPercentage = Math.round((roundCurrent / roundDuration) * 100)\r\n    console.log(animationPercentage)\r\n    setSongInfo({...songInfo, currentTime: current, duration: duration, animationPercentage});\r\n}\r\n  const songEndedHandler = async () => {\r\n    let currentIndex = songs.findIndex((song) => (song.id === currentSong.id))\r\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length])\r\n    if(isPlaying) audioRef.current.play();\r\n  }\r\n  return (\r\n    <div className={`App ${libraryStatus? \"library-active\" : \"\"}`}>\r\n      <Nav setLibraryStatus = {setLibraryStatus} libraryStatus = {libraryStatus} />\r\n      <Song currentSong = {currentSong}/>\r\n      <Player \r\n        audioRef = {audioRef}\r\n        isPlaying = {isPlaying} \r\n        setIsPlaying = {setIsPlaying}\r\n        currentSong = {currentSong}\r\n        setSongInfo = {setSongInfo}\r\n        songInfo = {songInfo}\r\n        songs = {songs}\r\n        setSongs = {setSongs}\r\n        setCurrentSong = {setCurrentSong}\r\n      />\r\n      <Library \r\n        libraryStatus = {libraryStatus}\r\n        audioRef = {audioRef} \r\n        isPlaying = {isPlaying}\r\n        setCurrentSong = {setCurrentSong} \r\n        songs = {songs}\r\n        setSongs = {setSongs}\r\n      />\r\n      <audio \r\n                onTimeUpdate = {timeUpdateHandler} \r\n                onLoadedMetadata = {timeUpdateHandler}\r\n                ref = {audioRef} \r\n                src = {currentSong.audio}\r\n                onEnded = {songEndedHandler}\r\n            />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}